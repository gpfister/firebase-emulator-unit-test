# gp-firebase-emulator-unit-test
#
# Greg PFISTER
# (C) 2021, Greg PFISTER. MIT License
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Continuous integration - Build and test on push or pull request to master

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm i -g firebase-tools
      - run: npm ci
      - run: npm run build
      - run: echo '{"projectId":"gp-example","region":"europe-west1","storageBucket":"default-bucket","firebaseEmulatorConfigFilePath":"./example/firebase.json","hub":{"hostname":"localhost","port":18099}}' > test.json
      - run: (cd example/functions; npm ci && npm run lint && npm run build)
      - run: (cd example; echo '{"projects":{"default":"gp-example"}}' > .firebaserc)
      - run: (cd example; firebase emulators:exec '(cd ..; npm test)')
